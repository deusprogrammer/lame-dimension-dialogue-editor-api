let jwtStrategy,extractJwt,authConfig;_441‍.x([["jwtAuthStrategy",()=>jwtAuthStrategy]]);_441‍.w("passport-jwt/lib/strategy",[["default",["jwtStrategy"],function(v){jwtStrategy=v}]]);_441‍.w("passport-jwt/lib/extract_jwt",[["default",["extractJwt"],function(v){extractJwt=v}]]);_441‍.w("./authConfig",[["default",["authConfig"],function(v){authConfig=v}]]);




       let jwtAuthStrategy = new jwtStrategy(
    {
        secretOrKey: authConfig.key,
        jwtFromRequest: extractJwt.fromAuthHeaderAsBearerToken(),
    },
    async (token, done) => {
        try {
            return done(null, token.user);
        } catch (error) {
            _441‍.g.console.error('JWT failed: ' + error);
            return done(error);
        }
    }
);
